// <auto-generated />
using System;
using LMSweb.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LMSweb.Migrations
{
    [DbContext(typeof(LMSmodel))]
    partial class LMSmodelModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LMSweb.Models.Course", b =>
                {
                    b.Property<string>("CID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAddMetacognition")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAddPeerAssessmemt")
                        .HasColumnType("bit");

                    b.Property<string>("TID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CID");

                    b.HasIndex("TID");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("LMSweb.Models.DefaultOption", b =>
                {
                    b.Property<int>("DOID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DOID"), 1L, 1);

                    b.Property<string>("DOptions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DQID")
                        .HasColumnType("int");

                    b.HasKey("DOID");

                    b.HasIndex("DQID");

                    b.ToTable("DefaultOptions");
                });

            modelBuilder.Entity("LMSweb.Models.DefaultQuestion", b =>
                {
                    b.Property<int>("DQID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DQID"), 1L, 1);

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DQID");

                    b.ToTable("DefaultQuestions");
                });

            modelBuilder.Entity("LMSweb.Models.EvalutionResponse", b =>
                {
                    b.Property<int>("RID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RID"), 1L, 1);

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DQID")
                        .HasColumnType("int");

                    b.Property<string>("EvaluatorSID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RID");

                    b.HasIndex("CID");

                    b.HasIndex("DQID");

                    b.HasIndex("MID");

                    b.HasIndex("SID");

                    b.ToTable("EvalutionResponse");
                });

            modelBuilder.Entity("LMSweb.Models.Group", b =>
                {
                    b.Property<int>("GID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GID"), 1L, 1);

                    b.Property<string>("CID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GID");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("LMSweb.Models.GroupER", b =>
                {
                    b.Property<int>("RID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RID"), 1L, 1);

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EvaluatorSID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GID")
                        .HasColumnType("int");

                    b.Property<int>("GQID")
                        .HasColumnType("int");

                    b.Property<string>("MID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MissionMID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RID");

                    b.HasIndex("CID");

                    b.HasIndex("GID");

                    b.HasIndex("GQID");

                    b.HasIndex("MissionMID");

                    b.ToTable("GroupERs");
                });

            modelBuilder.Entity("LMSweb.Models.GroupOption", b =>
                {
                    b.Property<int>("GOID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GOID"), 1L, 1);

                    b.Property<int>("GQID")
                        .HasColumnType("int");

                    b.Property<string>("OptionNum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GOID");

                    b.HasIndex("GQID");

                    b.ToTable("GroupOptions");
                });

            modelBuilder.Entity("LMSweb.Models.GroupQuestion", b =>
                {
                    b.Property<int>("GQID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GQID"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GQID");

                    b.ToTable("GroupQuestions");
                });

            modelBuilder.Entity("LMSweb.Models.KnowledgePoint", b =>
                {
                    b.Property<int>("KID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KID"), 1L, 1);

                    b.Property<string>("CID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("KContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KID");

                    b.HasIndex("CID");

                    b.ToTable("KnowledgePoints");
                });

            modelBuilder.Entity("LMSweb.Models.LearningBehavior", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("ActionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Detail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GID")
                        .HasColumnType("int");

                    b.Property<string>("MID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SubAction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("CID");

                    b.HasIndex("GID");

                    b.HasIndex("MID");

                    b.HasIndex("SID");

                    b.ToTable("LearningBehaviors");
                });

            modelBuilder.Entity("LMSweb.Models.Mission", b =>
                {
                    b.Property<string>("MID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("End")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAssess")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCoding")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDiscuss")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDrawing")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGReflect")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGoalSetting")
                        .HasColumnType("bit");

                    b.Property<bool>("IsReflect")
                        .HasColumnType("bit");

                    b.Property<bool>("Is_Journey")
                        .HasColumnType("bit");

                    b.Property<string>("MDetail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Start")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("relatedKP")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MID");

                    b.HasIndex("CID");

                    b.ToTable("Missions");
                });

            modelBuilder.Entity("LMSweb.Models.Option", b =>
                {
                    b.Property<int>("OID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OID"), 1L, 1);

                    b.Property<string>("OptionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QID")
                        .HasColumnType("int");

                    b.HasKey("OID");

                    b.HasIndex("QID");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("LMSweb.Models.PeerAssessment", b =>
                {
                    b.Property<int>("PEID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PEID"), 1L, 1);

                    b.Property<string>("AssessedSID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CooperationScore")
                        .HasColumnType("int");

                    b.Property<int?>("GroupGID")
                        .HasColumnType("int");

                    b.Property<string>("MID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PeerA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SMID")
                        .HasColumnType("int");

                    b.HasKey("PEID");

                    b.HasIndex("CID");

                    b.HasIndex("GroupGID");

                    b.HasIndex("MID");

                    b.HasIndex("SMID");

                    b.ToTable("PeerAssessments");
                });

            modelBuilder.Entity("LMSweb.Models.Question", b =>
                {
                    b.Property<int>("QID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QID"), 1L, 1);

                    b.Property<string>("CID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Class")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QID");

                    b.HasIndex("CID");

                    b.HasIndex("MID");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("LMSweb.Models.Response", b =>
                {
                    b.Property<int>("RID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RID"), 1L, 1);

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DQID")
                        .HasColumnType("int");

                    b.Property<string>("MID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RID");

                    b.HasIndex("CID");

                    b.HasIndex("DQID");

                    b.HasIndex("MID");

                    b.HasIndex("SID");

                    b.ToTable("Responses");
                });

            modelBuilder.Entity("LMSweb.Models.Student", b =>
                {
                    b.Property<string>("SID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("GID")
                        .HasColumnType("int");

                    b.Property<string>("SName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Score")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SID");

                    b.HasIndex("CID");

                    b.HasIndex("GID");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("LMSweb.Models.StudentCode", b =>
                {
                    b.Property<int>("SCID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SCID"), 1L, 1);

                    b.Property<string>("CID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CodePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GID")
                        .HasColumnType("int");

                    b.Property<bool>("IsEdit")
                        .HasColumnType("bit");

                    b.Property<string>("MID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("SCID");

                    b.HasIndex("CID");

                    b.HasIndex("GID");

                    b.HasIndex("MID");

                    b.ToTable("StudentCodes");
                });

            modelBuilder.Entity("LMSweb.Models.StudentDraw", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DrawingImgPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GID")
                        .HasColumnType("int");

                    b.Property<string>("MID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CID");

                    b.HasIndex("GID");

                    b.HasIndex("MID");

                    b.ToTable("StudentDraws");
                });

            modelBuilder.Entity("LMSweb.Models.StudentMission", b =>
                {
                    b.Property<int>("SMID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SMID"), 1L, 1);

                    b.Property<string>("MID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PersonalScore")
                        .HasColumnType("int");

                    b.Property<string>("SID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SelfA")
                        .HasColumnType("int");

                    b.Property<int>("TEID")
                        .HasColumnType("int");

                    b.Property<int>("total_score")
                        .HasColumnType("int");

                    b.HasKey("SMID");

                    b.HasIndex("MID");

                    b.HasIndex("SID");

                    b.HasIndex("TEID");

                    b.ToTable("StudentMissions");
                });

            modelBuilder.Entity("LMSweb.Models.Teacher", b =>
                {
                    b.Property<string>("TID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TID");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("LMSweb.Models.TeacherAssessment", b =>
                {
                    b.Property<int>("TEID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TEID"), 1L, 1);

                    b.Property<string>("CID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("GID")
                        .HasColumnType("int");

                    b.Property<int>("GroupAchievementScore")
                        .HasColumnType("int");

                    b.Property<string>("MID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TeacherA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TEID");

                    b.HasIndex("CID");

                    b.HasIndex("GID");

                    b.HasIndex("MID");

                    b.ToTable("TeacherAssessments");
                });

            modelBuilder.Entity("LMSweb.Models.Course", b =>
                {
                    b.HasOne("LMSweb.Models.Teacher", "teacher")
                        .WithMany("Courses")
                        .HasForeignKey("TID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("teacher");
                });

            modelBuilder.Entity("LMSweb.Models.DefaultOption", b =>
                {
                    b.HasOne("LMSweb.Models.DefaultQuestion", "DefaultQuestion")
                        .WithMany("DefaultOptions")
                        .HasForeignKey("DQID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DefaultQuestion");
                });

            modelBuilder.Entity("LMSweb.Models.EvalutionResponse", b =>
                {
                    b.HasOne("LMSweb.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CID");

                    b.HasOne("LMSweb.Models.DefaultQuestion", "DefaultQuestion")
                        .WithMany("EvalutionResponses")
                        .HasForeignKey("DQID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LMSweb.Models.Mission", "Mission")
                        .WithMany("EvalutionResponse")
                        .HasForeignKey("MID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LMSweb.Models.Student", "Student")
                        .WithMany("EvalutionResponses")
                        .HasForeignKey("SID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Course");

                    b.Navigation("DefaultQuestion");

                    b.Navigation("Mission");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("LMSweb.Models.GroupER", b =>
                {
                    b.HasOne("LMSweb.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CID");

                    b.HasOne("LMSweb.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LMSweb.Models.GroupQuestion", "GroupQuestion")
                        .WithMany("GroupERs")
                        .HasForeignKey("GQID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LMSweb.Models.Mission", "Mission")
                        .WithMany()
                        .HasForeignKey("MissionMID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Group");

                    b.Navigation("GroupQuestion");

                    b.Navigation("Mission");
                });

            modelBuilder.Entity("LMSweb.Models.GroupOption", b =>
                {
                    b.HasOne("LMSweb.Models.GroupQuestion", "GroupQuestion")
                        .WithMany("GroupOptions")
                        .HasForeignKey("GQID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GroupQuestion");
                });

            modelBuilder.Entity("LMSweb.Models.KnowledgePoint", b =>
                {
                    b.HasOne("LMSweb.Models.Course", "Courses")
                        .WithMany("KnowledgePoints")
                        .HasForeignKey("CID");

                    b.Navigation("Courses");
                });

            modelBuilder.Entity("LMSweb.Models.LearningBehavior", b =>
                {
                    b.HasOne("LMSweb.Models.Course", "Course")
                        .WithMany("LearningBehaviors")
                        .HasForeignKey("CID");

                    b.HasOne("LMSweb.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LMSweb.Models.Mission", "Mission")
                        .WithMany("LearningBehaviors")
                        .HasForeignKey("MID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LMSweb.Models.Student", "Student")
                        .WithMany("LearningBehaviors")
                        .HasForeignKey("SID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Course");

                    b.Navigation("Group");

                    b.Navigation("Mission");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("LMSweb.Models.Mission", b =>
                {
                    b.HasOne("LMSweb.Models.Course", "course")
                        .WithMany("Missions")
                        .HasForeignKey("CID");

                    b.Navigation("course");
                });

            modelBuilder.Entity("LMSweb.Models.Option", b =>
                {
                    b.HasOne("LMSweb.Models.Question", "Question")
                        .WithMany("Options")
                        .HasForeignKey("QID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("LMSweb.Models.PeerAssessment", b =>
                {
                    b.HasOne("LMSweb.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CID");

                    b.HasOne("LMSweb.Models.Group", null)
                        .WithMany("PeerAssessments")
                        .HasForeignKey("GroupGID");

                    b.HasOne("LMSweb.Models.Mission", "Mission")
                        .WithMany("PeerAssessments")
                        .HasForeignKey("MID");

                    b.HasOne("LMSweb.Models.StudentMission", "StudentMissions")
                        .WithMany("PeerAssessments")
                        .HasForeignKey("SMID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Mission");

                    b.Navigation("StudentMissions");
                });

            modelBuilder.Entity("LMSweb.Models.Question", b =>
                {
                    b.HasOne("LMSweb.Models.Course", "Course")
                        .WithMany("Questions")
                        .HasForeignKey("CID");

                    b.HasOne("LMSweb.Models.Mission", "mission")
                        .WithMany("Questions")
                        .HasForeignKey("MID");

                    b.Navigation("Course");

                    b.Navigation("mission");
                });

            modelBuilder.Entity("LMSweb.Models.Response", b =>
                {
                    b.HasOne("LMSweb.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CID");

                    b.HasOne("LMSweb.Models.DefaultQuestion", "DefaultQuestion")
                        .WithMany("Responses")
                        .HasForeignKey("DQID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LMSweb.Models.Mission", "Mission")
                        .WithMany("Responses")
                        .HasForeignKey("MID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LMSweb.Models.Student", "Student")
                        .WithMany("Responses")
                        .HasForeignKey("SID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Course");

                    b.Navigation("DefaultQuestion");

                    b.Navigation("Mission");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("LMSweb.Models.Student", b =>
                {
                    b.HasOne("LMSweb.Models.Course", "Course")
                        .WithMany("Students")
                        .HasForeignKey("CID");

                    b.HasOne("LMSweb.Models.Group", "Group")
                        .WithMany("Students")
                        .HasForeignKey("GID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("LMSweb.Models.StudentCode", b =>
                {
                    b.HasOne("LMSweb.Models.Course", "Course")
                        .WithMany("StudentCode")
                        .HasForeignKey("CID");

                    b.HasOne("LMSweb.Models.Group", "Group")
                        .WithMany("StudentCode")
                        .HasForeignKey("GID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LMSweb.Models.Mission", "Mission")
                        .WithMany("StudentCode")
                        .HasForeignKey("MID");

                    b.Navigation("Course");

                    b.Navigation("Group");

                    b.Navigation("Mission");
                });

            modelBuilder.Entity("LMSweb.Models.StudentDraw", b =>
                {
                    b.HasOne("LMSweb.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CID");

                    b.HasOne("LMSweb.Models.Group", "Group")
                        .WithMany()
                        .HasForeignKey("GID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LMSweb.Models.Mission", "Mission")
                        .WithMany()
                        .HasForeignKey("MID");

                    b.Navigation("Course");

                    b.Navigation("Group");

                    b.Navigation("Mission");
                });

            modelBuilder.Entity("LMSweb.Models.StudentMission", b =>
                {
                    b.HasOne("LMSweb.Models.Mission", "Mission")
                        .WithMany("StudentMissions")
                        .HasForeignKey("MID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LMSweb.Models.Student", "Student")
                        .WithMany("StudentMissions")
                        .HasForeignKey("SID")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("LMSweb.Models.TeacherAssessment", "TeacherAssessment")
                        .WithMany("StudentMissions")
                        .HasForeignKey("TEID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Mission");

                    b.Navigation("Student");

                    b.Navigation("TeacherAssessment");
                });

            modelBuilder.Entity("LMSweb.Models.TeacherAssessment", b =>
                {
                    b.HasOne("LMSweb.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CID");

                    b.HasOne("LMSweb.Models.Group", "Group")
                        .WithMany("TeacherA")
                        .HasForeignKey("GID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LMSweb.Models.Mission", "Mission")
                        .WithMany()
                        .HasForeignKey("MID");

                    b.Navigation("Course");

                    b.Navigation("Group");

                    b.Navigation("Mission");
                });

            modelBuilder.Entity("LMSweb.Models.Course", b =>
                {
                    b.Navigation("KnowledgePoints");

                    b.Navigation("LearningBehaviors");

                    b.Navigation("Missions");

                    b.Navigation("Questions");

                    b.Navigation("StudentCode");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("LMSweb.Models.DefaultQuestion", b =>
                {
                    b.Navigation("DefaultOptions");

                    b.Navigation("EvalutionResponses");

                    b.Navigation("Responses");
                });

            modelBuilder.Entity("LMSweb.Models.Group", b =>
                {
                    b.Navigation("PeerAssessments");

                    b.Navigation("StudentCode");

                    b.Navigation("Students");

                    b.Navigation("TeacherA");
                });

            modelBuilder.Entity("LMSweb.Models.GroupQuestion", b =>
                {
                    b.Navigation("GroupERs");

                    b.Navigation("GroupOptions");
                });

            modelBuilder.Entity("LMSweb.Models.Mission", b =>
                {
                    b.Navigation("EvalutionResponse");

                    b.Navigation("LearningBehaviors");

                    b.Navigation("PeerAssessments");

                    b.Navigation("Questions");

                    b.Navigation("Responses");

                    b.Navigation("StudentCode");

                    b.Navigation("StudentMissions");
                });

            modelBuilder.Entity("LMSweb.Models.Question", b =>
                {
                    b.Navigation("Options");
                });

            modelBuilder.Entity("LMSweb.Models.Student", b =>
                {
                    b.Navigation("EvalutionResponses");

                    b.Navigation("LearningBehaviors");

                    b.Navigation("Responses");

                    b.Navigation("StudentMissions");
                });

            modelBuilder.Entity("LMSweb.Models.StudentMission", b =>
                {
                    b.Navigation("PeerAssessments");
                });

            modelBuilder.Entity("LMSweb.Models.Teacher", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("LMSweb.Models.TeacherAssessment", b =>
                {
                    b.Navigation("StudentMissions");
                });
#pragma warning restore 612, 618
        }
    }
}
